Adv SQLServer Lab 
Notes:
* Restore ITI and adventureworks2012 DBs to Server
Part-1: Use ITI DB
1. Retrieve number of students who have a value in their age. 
2. Get all instructors Names without repetitions
3. Display student with the following Format (use is Null function)
Student ID   Student Full Name   Department name
4. Display instructor Name and Department Name 
Note: display all the instructors if they are attached to a department or not
5. Display student full name and the name of the course he is taking
For only courses which have a grade  
6. Display number of courses for each topic name
7. Display max and min salary for instructors
8. Display instructors who have salaries less than the average salary of all instructors.
9. Display the Department name that contains the instructor who receives the minimum salary.
10.  Select max two salaries in instructor table. 
11.  Select instructor name and his salary but if there is no salary display instructor bonus keyword. “use coalesce Function”
12. Select Average Salary for instructors 
13. Select Student first name and the data of his supervisor 
14. Write a query to select the highest two salaries in Each Department for instructors who have salaries. “using one of Ranking Functions”
15.  Write a query to select a random  student from each department.  “using one of Ranking Functions”


Part-2: Use AdventureWorks DB
1. Display the SalesOrderID, ShipDate of the SalesOrderHeader table (Sales schema) to show SalesOrders that occurred within the period ‘7/28/2002’ and ‘7/29/2014’
2. Display only Products(Production schema) with a StandardCost below $110.00 (show ProductID, Name only)
3. Display ProductID, Name if its weight is unknown
4.  Display all Products with a Silver, Black, or Red Color
5.  Display any Product with a Name starting with the letter B
6. Run the following Query
UPDATE Production.ProductDescription
SET Description = 'Chromoly steel_High of defects'
WHERE ProductDescriptionID = 3
Then write a query that displays any Product description with underscore value in its description.
7. Calculate sum of TotalDue for each OrderDate in Sales.SalesOrderHeader table for the period between  '7/1/2001' and '7/31/2014'
8.  Display the Employees HireDate (note no repeated values are allowed)
9.  Calculate the average of the unique ListPrices in the Product table
10. Display the Product Name and its ListPrice within the values of 100 and 120 the list should has the following format "The [product name] is only! [List price]" (the list will be sorted according to its ListPrice value)
11. 
1.  Transfer the rowguid ,Name, SalesPersonID, Demographics from Sales.Store table  in a newly created table named [store_Archive]
Note: Check your database to see the new table and how many rows in it?
2. Try the previous query but without transferring the data?
12. Using union statement, retrieve the today’s date in different styles using convert or format function.